OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 2, fm ="ml", rotate = "Promax")
summary(LA_EFA)
LA_EFA$loadings
tidy(LA_EFA$communality)
df %>%
select(
OMR_read_syls,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes
) %>%
cor(use = "pairwise.complete.obs") %>%
omega(nfactors = 1,
fm = "ml")
library(readr)
#df <- read_csv("~/GitHub/lendulet_language_SL/SEM/dataframes/SEM_df.csv")
df = read.csv(readline("Path of dataframe (e.g., C:/experiment/df.csv): "))
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_YA = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
remove(SL_fit_YA)
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
anova(SL_fit_adult, SL_fit_all)
performance::compare_performance(SL_fit_adult, SL_fit_all)
tidy(performance::compare_performance(SL_fit_adult, SL_fit_all))
performance::compare_performance(SL_fit_adult, SL_fit_all)
tidy(anova(SL_fit_adult, SL_fit_all))
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
tidy(anova(SL_fit_adult, SL_fit_all))
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
#SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
#SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 3,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
#SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 2,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_EFA$loadings
tidy(SL_EFA$communality)
tidy(SL_EFA$uniquenesses)
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
#SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
#SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
#AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
#SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
#SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
#AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 2,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_EFA$loadings
tidy(SL_EFA$communality)
tidy(SL_EFA$uniquenesses)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_offline =~ SEGM_AL_SEGM_prod_data + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
tidy(anova(SL_fit_adult, SL_fit_all))
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 2,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 3,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_EFA$loadings
tidy(SL_EFA$communality)
tidy(SL_EFA$uniquenesses)
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_vis_dec_RT_med + stroop_RT_score + simon_RT_score
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
"
CG_model =
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_vis_dec_RT_med + stroop_RT_score + simon_RT_score
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
"
CG_fit_adult = cfa(CG_model, filter(df, age_years > 14))
CG_fit_all = cfa(CG_model, df)
summary(CG_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(CG_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
anova(CG_fit_adult, CG_fit_all)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(LA_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
MENYET_mean_ACC_all = MENYET_mean_ACC_all*1
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
MENYET_mean_ACC_all ~~ 1*MENYET_mean_ACC_all
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(LA_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
MENYET_mean_ACC_all ~~ 1*MENYET_mean_ACC_all
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
View(df)
df[, 17:74] = scale(df[, 17:74])
df[, 17:74]
apply(df[, 17:74], MARGIN = 2, FUN = scale())
apply(x = df[, 17:74], MARGIN = 2, FUN = scale())
scale(df[, 17:74])
scale(df[,17:74])
scale(df$digit_span_forward_span)
sapply(df[, 17:74], scale())
sapply(df[, 17:74], scale)
sapply(df[, 17:18], scale)
View(df)
View(df)
df[, 17:33] = sapply(df[, 17:33], scale)
df[, 35:56] = sapply(df[, 35:56], scale)
df[, 58:74] = sapply(df[, 58:74], scale)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
SEGM_AL_ACC_RND4_REC5 ~~ 1*SEGM_AL_ACC_RND4_REC5
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
var(df$SEGM_AL_medRT_RND4_REC5)
var(df$SEGM_AL_medRT_RND4_REC5, na.rm = TRUE)
var(df[df[age_years] > 14]$SEGM_AL_medRT_RND4_REC5, na.rm = TRUE)
var(df[df['age_years'] > 14]$SEGM_AL_medRT_RND4_REC5, na.rm = TRUE)
df_adult = df %>% filter(age_years > 14)
var(df_adult$SEGM_AL_medRT_RND4_REC5)
var(df_adult$SEGM_AL_medRT_RND4_REC5, na.rm = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
SEGM_AL_ACC_RND4_REC5 ~~ 0.868*SEGM_AL_ACC_RND4_REC5
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
SEGM_AL_ACC_RND4_REC5 ~~ 1*SEGM_AL_ACC_RND4_REC5
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
SEGM_AL_ACC_RND4_REC5 ~~ 0.5*SEGM_AL_ACC_RND4_REC5
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
var(df_adult$SEGM_AL_ACC_TRN3_RND4, na.rm = TRUE)
var(df_adult$SEGM_AL_ACC_RND4_REC5, na.rm = TRUE)
SL_adult_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
SEGM_AL_ACC_TRN3_RND4 ~~ 0.7957512*SEGM_AL_ACC_TRN3_RND4
SEGM_AL_ACC_RND4_REC5 ~~ 0.9217788*SEGM_AL_ACC_RND4_REC5
"
SL_all_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_adult_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_all_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_adult_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_all_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_adult_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_all_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(LA_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_TRN3_RND4 + SEGM_AL_ACC_RND4_REC5
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit_adult = cfa(SL_model, filter(df, age_years > 14))
SL_fit_all = cfa(SL_model, df)
summary(SL_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(SL_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
tidy(anova(SL_fit_adult, SL_fit_all))
CG_model =
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_vis_dec_RT_med + stroop_RT_score + simon_RT_score
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
"
CG_fit_adult = cfa(CG_model, filter(df, age_years > 14))
CG_fit_all = cfa(CG_model, df)
summary(CG_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
summary(CG_fit_all, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
anova(CG_fit_adult, CG_fit_all)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_fit_adult = cfa(LA_model, filter(df, age_years > 14))
LA_fit_all = cfa(LA_model, df)
summary(LA_fit_adult, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
anova(LA_fit_adult, LA_fit_all)
tidy(anova(LA_fit_adult, LA_fit_all))
tidy(anova(CG_fit_adult, CG_fit_all))
