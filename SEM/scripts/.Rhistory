fa.parallel(fm = "ml", fa = "fa")
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
simon_RT_score,
simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
simon_RT_score,
#simon_ACC_score
) %>%
fa.parallel(fm = "ml", fa = "fa")
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 3, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa.parallel(fm = "ml", fa = "fa")
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 5, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa.parallel(fm = "ml", fa = "fa")
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
#stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
predictive_ACC_score,
selfpaced_target_RT_diff_GP,
selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa.parallel(fm = "ml", fa = "fa")
LA_EFA = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
predictive_ACC_score,
selfpaced_target_RT_diff_GP,
selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 3, fm ="ml", rotate = "Promax")
summary(LA_EFA)
LA_EFA$loadings
tidy(LA_EFA$communality)
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa.parallel(fm = "ml", fa = "fa")
LA_EFA = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 3, fm ="ml", rotate = "Promax")
summary(LA_EFA)
LA_EFA$loadings
tidy(LA_EFA$communality)
LA_EFA = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 3, fm ="ml", rotate = "Promax")
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa.parallel(fm = "ml", fa = "fa")
LA_EFA = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 2, fm ="ml", rotate = "Promax")
summary(LA_EFA)
LA_EFA$loadings
tidy(LA_EFA$communality)
df %>%
select(
OMR_read_syls,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes
) %>%
cor(use = "pairwise.complete.obs") %>%
omega(nfactors = 1,
fm = "ml")
df %>%
select(
MENYET_mean_ACC_all,
trog_pragm_ACC_mean
) %>%
cor(use = "pairwise.complete.obs") %>%
omega(nfactors = 1,
fm = "ml")
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_ACC_train,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 3,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_EFA$loadings
tidy(SL_EFA$uniquenesses)
df %>%
select(
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
cor(use = "pairwise.complete.obs") %>%
omega(nfactors = 1,
fm = "ml")
df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa.parallel(fm = "ml", fa = "fa")
GC_EFA = df %>%
select(
PROC_SPEED_vis_RT_med,
PROC_SPEED_ac_RT_med,
#PROC_SPEED_vis_dec_RT_med,
digit_span_forward_span,
digit_span_backward_span,
n_back_nback_1_dprime,
n_back_nback_2_dprime,
n_back_nback_3_dprime,
stroop_RT_score,
stroop_ACC_score,
#simon_RT_score,
#simon_ACC_score
) %>%
fa(nfactors = 4, fm ="ml", rotate = "Promax")
summary(GC_EFA)
GC_EFA$loadings
tidy(GC_EFA$uniquenesses)
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa.parallel(fm = "ml", fa = "fa")
LA_EFA = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
#predictive_RT_score,
#predictive_ACC_score,
selfpaced_target_RT_diff_GP,
#selfpaced_plus1_RT_diff_mellekmondat,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
fa(nfactors = 2, fm ="ml", rotate = "Promax")
summary(LA_EFA)
LA_EFA$loadings
tidy(LA_EFA$communality)
#df <- read.csv("~/GitHub/lendulet_language_SL/SEM/dataframes/SEM_df.csv")
df = read.csv(readline("Path of dataframe (e.g., C:/experiment/df.csv): "))
df = df %>%
filter(age_years > 14)
df[, 17:33] = sapply(df[, 17:33], scale)
df[, 35:56] = sapply(df[, 35:56], scale)
df[, 58:74] = sapply(df[, 58:74], scale)
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ SEGM_AL_ACC_RND4_REC5 + SEGM_AL_ACC_TRN3_RND4
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit = cfa(SL_model, df, missing = "ML", estimator = "ML")
library(tidyverse)
library(lavaan)
library(semTools)
library(broom)
SL_fit = cfa(SL_model, df, missing = "ML", estimator = "ML")
SL_model =
"
SL_RT =~ SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_ACC =~ 1*SEGM_AL_ACC_RND4_REC5 + 1*SEGM_AL_ACC_TRN3_RND4
SL_offline =~ SEGM_AL_2AFC_trigram + SEGM_AL_SEGM_prod_data + AGL_2AFC_phr + AGL_2AFC_sent + AGL_prod
"
SL_fit = cfa(SL_model, df, missing = "ML", estimator = "ML")
summary(SL_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
CG_model =
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_vis_dec_RT_med + stroop_RT_score + simon_RT_score
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
"
CG_fit = cfa(CG_model, df, missing = "ML", estimator = "ML")
summary(CG_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
CG_model =
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
stroop =~ stroop_RT_score + stroop_ACC_score
"
CG_fit = cfa(CG_model, df, missing = "ML", estimator = "ML")
summary(CG_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
CG_model =
"
PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
DS =~ digit_span_forward_span + digit_span_backward_span
nback =~ n_back_nback_1_dprime + n_back_nback_2_dprime + n_back_nback_3_dprime
"
CG_fit = cfa(CG_model, df, missing = "ML", estimator = "ML")
summary(CG_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_model =
"
offline =~ MENYET_mean_ACC_all + trog_pragm_ACC_mean
reading =~ OMR_read_syls + selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
"
LA_fit = cfa(LA_model, df, missing = "ML", estimator = "ML")
summary(LA_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
