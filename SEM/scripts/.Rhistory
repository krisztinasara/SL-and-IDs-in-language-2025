PS_02 =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
"
model_PS_02_fit = cfa(model_PS_02, df, missing = "ML", estimator = "MLR")
summary(model_PS_02_fit, standardized = TRUE, fit.measures = TRUE)
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
AGL_ACC_train,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
#SEGM_AL_medRT_train,
#SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
#AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
#SEGM_AL_medRT_train,
#SEGM_AL_medRT_TRN3_RND4,
#SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
#SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
AGL_ACC_train,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
SEGM_AL_ACC_RND4_REC5,
#AGL_ACC_train,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
#SEGM_AL_ACC_train,
SEGM_AL_ACC_TRN3_RND4,
#SEGM_AL_ACC_RND4_REC5,
#AGL_ACC_train,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
#SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
KMO()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
) %>%
BARTLETT()
df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
SEGM_AL_medRT_train,
SEGM_AL_medRT_TRN3_RND4,
SEGM_AL_medRT_RND4_REC5,
) %>%
# maximum likelihood
fa(
nfactors = 1,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_EFA$loadings
tidy(SL_EFA$uniquenesses)
df %>%
select(
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
BARTLETT()
df %>%
select(
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
fa.parallel(fm = "ml", fa = "fa")
SL_EFA = df %>%
select(
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 2,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_EFA)
SL_OFF = df %>%
select(
SEGM_AL_2AFC_bigram,
SEGM_AL_2AFC_trigram,
SEGM_AL_SEGM_prod_data,
AGL_2AFC_phr,
AGL_2AFC_sent,
AGL_prod
) %>%
# maximum likelihood
fa(
nfactors = 2,
fm = "ml",
rotate = "Promax",
use = "pairwise",
cor = "cor",
scores = "regression",
missing = TRUE,
impute = "mean"
)
summary(SL_OFF)
SL_OFF$loadings
tidy(SL_OFF$uniquenesses)
model_SL =
"
SL_RT =~ SEGM_AL_medRT_train + SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_tribi =~ SEGM_AL_2AFC_bigram + SEGM_AL_2AFC_trigram
SL_SEGM_prod =~ SEGM_AL_SEGM_prod_data
SL_AGL =~ AGL_2AFC_sent + AGL_prod
SL_phr =~ AGL_2AFC_phr
"
model_SL =
"
SL_RT =~ SEGM_AL_medRT_train + SEGM_AL_medRT_TRN3_RND4 + SEGM_AL_medRT_RND4_REC5
SL_tribi =~ SEGM_AL_2AFC_bigram + SEGM_AL_2AFC_trigram
SL_SEGM_prod =~ SEGM_AL_SEGM_prod_data
SL_AGL =~ AGL_2AFC_sent + AGL_prod
SL_phr =~ AGL_2AFC_phr
"
model_SL_fit = cfa(model_SL, df, missing = "ML", estimator = "MLR")
summary(model_SL_fit, standardized = TRUE, fit.measures = TRUE)
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
predictive_ACC_score,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
KMO()
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
KMO()
df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
KMO()
km = df %>%
select(
MENYET_mean_ACC_all,
OMR_read_syls,
predictive_RT_score,
selfpaced_target_RT_diff_GP,
selfpaced_target_RT_diff_sertes,
trog_pragm_ACC_mean
) %>%
kmeansvar(init = 5, nstart = 1000)
summary(km)
model_SL_RT =
"
SL_RT =~ 1*SEGM_AL_medRT_TRN3_RND4 + 1*SEGM_AL_medRT_RND4_REC5
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_RT_fit = cfa(model_SL_RT, df, missing = "ML", estimator = "MLR")
model_SL_RT_fit = cfa(model_SL_RT, df, missing = "ML", estimator = "MLR")
summary(model_SL_RT_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_LANG =
"
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_LANG_fit = cfa(model_LANG, df, missing = "ML", estimator = "MLR")
summary(model_LANG_fit, standardized = TRUE, fit.measures = TRUE)
model_SL_tribi =
"
SL_tribi =~ SEGM_AL_2AFC_bigram + SEGM_AL_2AFC_trigram
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_tribi_fit = cfa(model_SL_tribi, df, missing = "ML", estimator = "MLR")
summary(model_SL_tribi_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_SL_prod =
"
SL_prod =~ SEGM_AL_SEGM_prod_data
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_prod_fit = cfa(model_SL_prod, df, missing = "ML", estimator = "MLR")
summary(model_SL_prod_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_SL_AGL =
"
SL_AGL =~ AGL_2AFC_sent + AGL_prod
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_AGL_fit = cfa(model_SL_AGL, df, missing = "ML", estimator = "MLR")
summary(model_SL_AGL_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_SL_phr =
"
SL_phr =~ AGL_2AFC_phr
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
COG_stroop =~ stroop_RT_score
COG_simon =~ simon_RT_score
LANG_MENYET =~ MENYET_mean_ACC_all
LANG_OMR =~ OMR_read_syls
LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_phr_fit = cfa(model_SL_phr, df, missing = "ML", estimator = "MLR")
summary(model_SL_phr_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_SL_RT =
"
SL_RT =~ 1*SEGM_AL_medRT_TRN3_RND4 + 1*SEGM_AL_medRT_RND4_REC5
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
#COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
#COG_stroop =~ stroop_RT_score
#COG_simon =~ simon_RT_score
#LANG_MENYET =~ MENYET_mean_ACC_all
#LANG_OMR =~ OMR_read_syls
#LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
#LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_RT_fit = cfa(model_SL_RT, df, missing = "ML", estimator = "MLR")
library(tidyverse)
library(lavaan)
library(semTools)
library(broom)
model_SL_RT_fit = cfa(model_SL_RT, df, missing = "ML", estimator = "MLR")
summary(model_SL_RT_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
model_SL_tribi =
"
SL_tribi =~ SEGM_AL_2AFC_bigram + SEGM_AL_2AFC_trigram
COG_PS =~ PROC_SPEED_vis_RT_med + PROC_SPEED_ac_RT_med
#COG_PS_visdec =~ PROC_SPEED_vis_dec_RT_med
COG_DS =~ digit_span_forward_span + digit_span_backward_span
COG_nback =~ n_back_nback_2_dprime + n_back_nback_3_dprime
#COG_stroop =~ stroop_RT_score
#COG_simon =~ simon_RT_score
#LANG_MENYET =~ MENYET_mean_ACC_all
#LANG_OMR =~ OMR_read_syls
#LANG_pred =~ predictive_RT_score
LANG_space =~ selfpaced_target_RT_diff_GP + selfpaced_target_RT_diff_sertes
#LANG_TROG =~ trog_pragm_ACC_mean
"
model_SL_tribi_fit = cfa(model_SL_tribi, df, missing = "ML", estimator = "MLR")
summary(model_SL_tribi_fit, standardized = TRUE, rsquare = TRUE, fit.measures = TRUE)
